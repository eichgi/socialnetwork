<?php

namespace Tests\Unit\Models;

use App\Comment;
use App\Like;
use App\Status;
use App\User;
use Tests\TestCase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\RefreshDatabase;

class StatusTest extends TestCase
{
    use RefreshDatabase;
    public $status;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->status = factory(Status::class)->create();
    }


    function test_a_status_belongs_to_a_user()
    {
        $status = factory(Status::class)->create();
        $this->assertInstanceOf(User::class, $status->user);
    }

    function test_a_status_has_many_comments()
    {
        $status = factory(Status::class)->create();
        factory(Comment::class)->create(['status_id' => $status->id]);
        $this->assertInstanceOf(Comment::class, $status->comments->first());
    }

    function test_a_status_has_many_likes()
    {
        $status = factory(Status::class)->create();
        factory(Like::class)->create(['status_id' => $status->id]);
        $this->assertInstanceOf(Like::class, $status->likes->first());
    }

    function test_a_status_can_be_liked_and_unlike()
    {
        $status = factory(Status::class)->create();
        $this->actingAs(factory(User::class)->create());
        $status->like();
        $this->assertEquals(1, $status->fresh()->likes->count());
        $status->unlike();
        $this->assertEquals(0, $status->fresh()->likes->count());
    }

    function test_a_status_can_be_liked_once()
    {
        $status = factory(Status::class)->create();
        $this->actingAs(factory(User::class)->create());
        $status->like();
        $this->assertEquals(1, $status->likes->count());
        $status->like();
        $this->assertEquals(1, $status->fresh()->likes->count());
    }

    public function test_a_status_knows_if_it_has_been_liked()
    {
        $status = factory(Status::class)->create();
        $this->assertFalse($status->isLiked());
        $this->actingAs(factory(User::class)->create());
        $this->assertFalse($status->isLiked());
        $status->like();
        $this->assertTrue($status->isLiked());
    }

    public function test_a_status_knows_how_many_likes_it_has()
    {
        $this->assertEquals(0, $this->status->likesCount());
        factory(Like::class, 2)->create([
            'status_id' => $this->status->id
        ]);
        $this->assertEquals(2, $this->status->likesCount());
    }
}
